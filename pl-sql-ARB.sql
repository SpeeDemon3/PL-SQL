-- MODIFICO LA VARIABLE SERVEROUTPUT

SET SERVEROUTPUT ON;

-- MODIFICO LA VARIABLE VERIFY PARA QUE MUESTRE MENSAJE DE VERIFICACION

SET VERIFY OFF;

-- MODIFICO LA VARIABLE FEEDBACK PARA QUE MUESTRE SI ALGO NO ES CORRECTO

SET FEEDBACK ON;

-- CREACION TABLA 'INCIDENCIAS'

DROP TABLE INCIDENCIAS;

CREATE TABLE INCIDENCIAS (
    COD_INC NUMBER PRIMARY KEY NOT NULL,
    EQUIPO NUMBER NOT NULL,
    DESCRIPCION VARCHAR2(500),
    USUARIO NUMBER,
    FECHA_HORA VARCHAR2(20),
    SOLUCIONADO CHAR(1),
    COSTE FLOAT
) TABLESPACE EMPRESA;

-- COMPRUEBO LA TABLA INCIDENCIAS

SELECT * FROM INCIDENCIAS;

-- INSERTO DATOS EN LA TABLA

INSERT INTO INCIDENCIAS VALUES (01, 33, 'COMPONENTE DA헤DO', 01, '12-12-1999 09:23:22' , 'S', 100);
INSERT INTO INCIDENCIAS VALUES (02, 34, 'PLACA BASE QUEMADA', 02, '29-03-2000 09:45:00', 'N', 500);
INSERT INTO INCIDENCIAS VALUES (03, 01, 'COMPONENTE DA헤DO', 03, '15-04-2002 13:00:30', 'S', 150);
INSERT INTO INCIDENCIAS VALUES (04, 03, 'VENTILADORES QUEMADA', 04, '30-07-2005 15:45:59', 'S', 300);
INSERT INTO INCIDENCIAS VALUES (05, 13, 'COMPONENTE DA헤DO', 05, '01-12-2008 17:15:09', 'S', 100);
INSERT INTO INCIDENCIAS VALUES (06, 54, 'PANTALLA DA헤DA', 06, '03-11-2012 12:30:00', 'N', 300);
INSERT INTO INCIDENCIAS VALUES (07, 99, 'COMPONENTE DA헤DO', 07, '04-06-2016 16:00:12', 'S', 150);
INSERT INTO INCIDENCIAS VALUES (08, 07, 'VENTILADORES QUEMADA', 08, '17-12-2017 11:54:00', 'S', 300);
INSERT INTO INCIDENCIAS VALUES (09, 87, 'FUSIBLE QUEMADO', 08, '15-01-2022 08:00:00', 'N', 300);



/* CREO PROCEDIMIENTO ALMACENADO 'ENTRAR_INCIDENCIAS' QUE PERMITA INTRODUCIR 
   DATOS DE INCIDENCAS POR TECLADO CONTROLANDO EXCEPCIONES */
   
   
-- COMPRUEBO LA TABLA INCIDENCAS

SELECT * FROM INCIDENCIAS;


-- CREO EL PROCEDIMIENTO

CREATE OR REPLACE PROCEDURE ENTRAR_INCIDENCIAS (
                                        V_COD_INC INCIDENCIAS.COD_INC%TYPE,
                                        V_EQUIPO INCIDENCIAS.EQUIPO%TYPE,
                                        V_DESCRIP INCIDENCIAS.DESCRIPCION%TYPE,
                                        V_USUARIO INCIDENCIAS.USUARIO%TYPE,
                                        V_FECHA_HORA INCIDENCIAS.FECHA_HORA%TYPE,
                                        V_SOLUC INCIDENCIAS.SOLUCIONADO%TYPE,
                                        V_COSTE INCIDENCIAS.COSTE%TYPE)
IS

BEGIN 
        INSERT INTO INCIDENCIAS
                    (INCIDENCIAS.COD_INC, INCIDENCIAS.EQUIPO, INCIDENCIAS.DESCRIPCION, 
                     INCIDENCIAS.USUARIO, INCIDENCIAS.FECHA_HORA, INCIDENCIAS.SOLUCIONADO, 
                     INCIDENCIAS.COSTE) 
        VALUES (V_COD_INC, V_EQUIPO, V_DESCRIP, V_USUARIO, V_FECHA_HORA, V_SOLUC,
                V_COSTE);
EXCEPTION 
        WHEN NO_DATA_FOUND THEN 
                    DBMS_OUTPUT.PUT_LINE('El codigo ' || V_COD_INC || 'no existe.');
        WHEN DUP_VAL_ON_INDEX THEN
                    DBMS_OUTPUT.PUT_LINE('ERROR CODIGO DUPLICADO, COMPRUEBE EL CODIGO DE LA INCIDENCIA');
END ENTRAR_INCIDENCIAS;
     
    
-- SOLICITO DATOS AL USUARIO Y DECLARO EL PROCEDIMIENTO ENTRAR_INCIDENCIAS

SET SERVEROUTPUT ON;
ACCEPT V_COD_INC PROMPT 'Introduce el c祚igo de la incidencas';
ACCEPT V_EQUIPO PROMPT 'Introduce el numero de equipo';
ACCEPT V_DESCRIP PROMPT 'Haga una breve descripci蚤';
ACCEPT V_FECHA_HORA PROMPT 'Introduzca la fecha y hora de la incidencia en formato
                            dd/mm/yyyy hh:mm:ss';
ACCEPT V_USUARIO PROMPT 'Introduzca el usuario';
ACCEPT V_SOLUCIONADO PROMPT 'Pulse S si esta solucionado, caso contrario pulse N';
ACCEPT V_COSTE PROMPT 'Introduzca el coste de la incidencia'; 
DECLARE
    V_COD_INC INCIDENCIAS.COD_INC%TYPE := &V_COD_INC;
    V_EQUIPO INCIDENCIAS.EQUIPO%TYPE := &V_EQUIPO;
    V_DESCRIP INCIDENCIAS.DESCRIPCION%TYPE := '&V_DESCRIP';
    V_USUARIO INCIDENCIAS.USUARIO%TYPE := &V_USUARIO;
    V_FECHA_HORA INCIDENCIAS.FECHA_HORA%TYPE := '&V_FECHA_HORA';
    V_SOLUCIONADO INCIDENCIAS.SOLUCIONADO%TYPE := '&V_SOLUCIONADO';
    V_COSTE INCIDENCIAS.COSTE%TYPE := &V_COSTE;
BEGIN
    ENTRAR_INCIDENCIAS(V_COD_INC, V_EQUIPO, V_DESCRIP, V_USUARIO, V_FECHA_HORA,
                       V_SOLUCIONADO, V_COSTE);
                      
END;

-- COMPRUEBO LA INSERCION EN LA TABLA INCIDENCIAS

SELECT * FROM INCIDENCIAS;




/* PROCEDIMIENTOS LLAMADO 'MOSTRAR_INCIDENCIAS' PARA VISUALIZAR TODAS LAS INCIDENCIAS DE UN USUARIO */

-- CREO PROCEDIMIENTO MOSTRAR_INCIDENCIAS

SET SERVEROUTPUT ON;
    
CREATE OR REPLACE PROCEDURE MOSTRAR_INCIDENCIAS(V_USUARIO INCIDENCIAS.USUARIO%TYPE)
IS
    CURSOR C_INCIDENCIAS IS
        SELECT COD_INC AS  "CODIGO INCIDENCIA",
               EQUIPO,
               DESCRIPCION AS "DESCRIPCI흁",
               USUARIO,
               FECHA_HORA AS "FECHA Y HORA",
               SOLUCIONADO,
               COSTE
        FROM INCIDENCIAS
        WHERE USUARIO = V_USUARIO; 
    V_COD INCIDENCIAS.COD_INC%TYPE;
    V_EQUIP INCIDENCIAS.EQUIPO%TYPE;
    V_DESC INCIDENCIAS.DESCRIPCION%TYPE;
    V_USU INCIDENCIAS.USUARIO%TYPE;
    V_F_H INCIDENCIAS.FECHA_HORA%TYPE;
    V_SOL INCIDENCIAS.SOLUCIONADO%TYPE;
    V_COSTE INCIDENCIAS.COSTE%TYPE;
BEGIN
    DBMS_OUTPUT.PUT_LINE('Incidencias del usuario ' || V_USUARIO);
    OPEN C_INCIDENCIAS;
    FETCH C_INCIDENCIAS INTO V_COD, v_EQUIP, V_DESC, V_USU, V_F_H, V_SOL, V_COSTE;
    WHILE(C_INCIDENCIAS%FOUND) LOOP
        DBMS_OUTPUT.PUT_LINE(V_COD || ' - ' || V_EQUIP || V_DESC || V_USU
                            || ' - ' || V_F_H || ' - ' || V_SOL || ' - ' || V_COSTE);
    FETCH C_INCIDENCIAS INTO V_COD, v_EQUIP, V_DESC, V_USU, V_F_H, V_SOL, V_COSTE;
    END LOOP;
    CLOSE C_INCIDENCIAS;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('ERROR!!! El usuario no existe.');
END MOSTRAR_INCIDENCIAS;


-- SOLUCITO AL USUARIO QUE INTRODUZCA EL NUMERO DE USUARIO

ACCEPT PROMPT_USUARIO PROMPT 'Introduce el numero de usuario para saber sus incidencias';

DECLARE 
    V_USUARIO INCIDENCIAS.USUARIO%TYPE := &PROMPT_USUARIO;
    
BEGIN
    MOSTRAR_INCIDENCIAS(V_USUARIO);
END;




/*  IMPLEMENTO UN DISPARADOR LLAMADO 'ESTADO_INCIDENCIAS' PARA MOSTRAR LAS INCIDENCIAS 
    QUE AUN NO ESTAN SOLUCIONADAS CADA VEZ QUE SE REALICE UN UPDATE O INSERT EN 
    LA TABLA INCIDENCIAS    */
    

-- CREO EL TRIGGER ESTADO_INCIDENCIAS
CREATE  OR REPLACE TRIGGER ESTADO_INCIDENCIAS
AFTER UPDATE OR INSERT ON INCIDENCIAS
DECLARE
    CURSOR C_INC_N IS
        SELECT COD_INC, DESCRIPCION
        FROM INCIDENCIAS
        WHERE SOLUCIONADO = 'N';
    DATO INCIDENCIAS%ROWTYPE;
    
BEGIN 
    FOR DATO IN C_INC_N LOOP
        SELECT COD_INC, DESCRIPCION  INTO  DATO FROM INCIDENCIAS WHERE DATO.COD_INC = COD_INC;
            DBMS_OUTPUT.PUT_LINE('LA INCIDENCIA ' || DATO.COD_INC || ' CON '
            || DATO.DESCRIPCION || ' AUN SIGUE SIN ESTAR SOLUCIONADA.');
    END LOOP;
END;


-- COMPRUEBO QUE FUNCIONA

INSERT INTO INCIDENCIAS VALUES (27, 17, 'CPU DA헤DA', 08, '18-12-2022 17:59:00', 'S', 1000);



